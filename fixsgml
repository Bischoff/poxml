#! /usr/bin/python

import re, sys, os, string

def addquotes(matchobj):
	return matchobj.group(1) + '="' + matchobj.group(2) + '"' + matchobj.group(3)

def fixEndTag(matchobj):
	str = matchobj.group(1)
	ch = str[-1]
	str = str[:-1]
	wss = ''
	while len(str) and str[-1] in [' ', '\t', '\n', '\r', '\f', '\v']:
		wss = str[-1] + wss
		str = str[:-1]
	return str + '>' + wss + ch

def fixPendingEnd(match):
	return '<' + match.group(1) + match.group(2) + "</%s>" % match.group(1)

docbookfile = open(sys.argv[1])
text = docbookfile.read()
docbookfile.close()
pat = re.compile(r'(<[^>]*\s[^> \t\n]+)=([^ \t\n\r\f\v">]+)([\s>])', re.DOTALL)

while 1:
	text, n = re.subn(pat, addquotes, text)
	if not n:
		break
	else:
		sys.stderr.write("replaced %d wrong parameters\n" % n)
	
# fixing broken endtag
for tag in "email", "para":
	text, n = re.subn("(</%s\s+[^>])" % tag, fixEndTag, text)
	if n:
		sys.stderr.write("fixed %d wrong end tags\n" % n)

for tag in "lt", "gt", "amp", "lcub", "rcub", "lowbar", "etago", "dollar", \
	"percnt", "lsqb", "rsqb", "num", "verbar": # kdevelop strangeness
	text = re.sub("&&%s;;" % tag, "&%s;" % tag, text)

text, n2 = re.subn('&\s', '&amp; ', text)
text, n3 = re.subn('&&\s', '&amp;&amp; ', text)
n = n2 + n3
if n:
	sys.stderr.write("fixed %d wrong amps\n" % n)

text, n = re.subn('<([^> \t\n\r]+)([^>]*>[^<]+)</>', fixPendingEnd, text)
if n:
	sys.stderr.write("fixed %d pending ends\n" % n)

text = re.sub('´', '\'', text)
text = re.sub('ö', '&ouml;', text)
text = re.sub('ü', '&uuml;', text)
text = re.sub('ä', '&auml;', text)
text = re.sub('ß', '&szlig;', text)

docbookfile = open(sys.argv[1], 'w')
docbookfile.write(text)
docbookfile.close()
