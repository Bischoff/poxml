#! /usr/bin/python

import re, sys, os, string

def addquotes(matchobj):
	return matchobj.group(1) + '="' + matchobj.group(2) + '"' + matchobj.group(3)

def fixEndTag(matchobj):
	str = matchobj.group(1)
	ch = str[-1]
	str = str[:-1]
	wss = ''
	while len(str) and str[-1] in [' ', '\t', '\n', '\r', '\f', '\v']:
		wss = str[-1] + wss
		str = str[:-1]
	return str + '>' + wss + ch

def fixPendingEnd(match):
	return '<' + match.group(1) + match.group(2) + "</%s>" % match.group(1)

docbookfile = open(sys.argv[1])
text = docbookfile.read()
docbookfile.close()
pat = re.compile(r'(<[^>]*\s\S+)=([^ \t\n\r\f\v">]+)([\s>])', re.DOTALL)

while 1:
	text, n = re.subn(pat, addquotes, text)
	if not n:
		break
	else:
		sys.stderr.write("replaced %d wrong parameters\n" % n)
	
# fixing broken endtag
for tag in "email", "para":
	text, n = re.subn("(</%s\s*[^>])" % tag, fixEndTag, text)
	if n:
		sys.stderr.write("fixed %d wrong end tags\n" % n)

text, n = re.subn('&[\s]', '&amp; ', text)
if n:
	sys.stderr.write("fixed %d wrong amps\n" % n)

text, n = re.subn('<([^> \t\n\r]+)([^>]*>[^<]+)</>', fixPendingEnd, text)
if n:
	sys.stderr.write("fixed %d pending ends\n" % n)

text, n = re.subn('´', '\'', text)
if n:
	sys.stderr.write("fixed %d not UTF-8\n" % n)

n = 0
for tag in 'amp', 'konqueror', 'kde', 'kcontrol':
	text, n2 = re.subn('&%s([^;\-a-zA-Z])' % tag, r'&%s;\1' % tag, text)
	n = n + n2
	
if n:
	sys.stderr.write("fixed %d pending entities\n" % n)

docbookfile = open(sys.argv[1], 'w')
docbookfile.write(text)
docbookfile.close()
